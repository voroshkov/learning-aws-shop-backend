service: ProductService

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1

  httpApi:
    cors: true

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:485160961034:table/Products"
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:485160961034:table/Stocks"

  environment:
    DYNDB_PRODUCTS_TABLE_NAME: "Products"
    DYNDB_STOCKS_TABLE_NAME: "Stocks"

#plugins:
#  - serverless-functions-base-path
#custom:
#  functionsBasePath: dist

package:
  individually: true
  patterns:
    - '!**/*'

functions:
  getProductList:
    package:
      include:
       - dist/getProductList.js
       - dist/package.json
    handler: dist/getProductList.getProductList
    events:
      - httpApi:
          path: /products
          method: get


  getProductById:
    package:
      include:
        - dist/getProductById.js
        - dist/package.json
    handler: dist/getProductById.getProductById
    events:
      - httpApi:
          path: /product/{id}
          method: get


  createProduct:
    package:
      include:
        - dist/createProduct.js
        - dist/package.json
    handler: dist/createProduct.createProduct
    events:
      - httpApi:
          path: /products
          method: post

